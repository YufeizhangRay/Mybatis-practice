<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zyf.mybatis.dao.DepartmentMapper">

	<!-- public Department getDeaprtmentById(Integer id); -->
	<select id="getDeaprtmentById"
		resultType="cn.zyf.mybatis.bean.Department">
		select id,dept_name departmentName from tbl_dept where id=#{id}
	</select>

	<!-- collection 嵌套结果集的方式，定义关联的集合类型的元素的封装规则 -->
	<resultMap type="cn.zyf.mybatis.bean.Department" id="MyDept">
		<id column="did" property="id" />
		<result column="dept_name" property="departmentName" />
		<!-- collection 定义关联的集合类型的属性的封装规则 ofType 指定集合里面元素的类型 -->
		<collection property="emps"
			ofType="cn.zyf.mybatis.bean.Employee">
			<!-- 定义集合中元素的封装规则 -->
			<id column="eid" property="id" />
			<result column="last_name" property="lastName" />
			<result column="email" property="email" />
			<result column="gender" property="gender" />
		</collection>
	</resultMap>
	<!-- public Department getDeaprtmentByIdPlus(Integer id); -->
	<select id="getDeaprtmentByIdPlus" resultMap="MyDept">
		select d.id did,d.dept_name dept_name,
		e.id eid,e.last_name last_name,e.email email,e.gender gender
		from tbl_dept d
		left join tbl_employee e
		on d.id=e.d_id
		where d.id=#{id}
	</select>

	<resultMap type="cn.zyf.mybatis.bean.Department" id="MyDeptStep">
		<id column="id" property="id" />
		<result column="dept_name" property="departmentName" />
		<collection property="emps" 
			select="cn.zyf.mybatis.dao.EmployeeMapperPlus.getEmployeeByDeptId"
			column="{deptId=id}" fetchType="lazy"></collection>
	</resultMap>
	
	<!-- public Department getDeaprtmentByIdStep(Integer id); -->
	<select id="getDeaprtmentByIdStep" resultMap="MyDeptStep">
		select id,dept_name departmentName from tbl_dept where id=#{id}
	</select>
	
	<!-- 扩展：将多列的值传递过去
		将多列的值封装成map传递
		column=“{key1=column1，key2=column2}”
	 -->
</mapper>